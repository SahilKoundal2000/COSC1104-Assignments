# Function to check if a number is prime
def is_prime(n):
    if n <= 1:  # Selection: numbers less than or equal to 1 are not prime
        return False
    for i in range(2, n):  # Iteration: check divisibility from 2 to n-1
        if n % i == 0:
            return False  # Selection: if divisible by any number, it's not prime
    return True  # If no divisors are found, it's prime

# Function to find the previous prime number
def previous_prime(n):
    for i in range(n - 1, 1, -1):  # Iteration: move backwards from n-1
        if is_prime(i):
            return i  # Return the first previous prime found
    return None  # No previous prime found

# Function to find the next prime number
def next_prime(n):
    i = n + 1  # Start checking from n+1
    while not is_prime(i):  # Iteration: keep checking next numbers until prime is found
        i += 1
    return i

# Function to find factors of a number
def find_factors(n):
    factors = []  # List to store factors
    for i in range(2, n):  # Iteration: find divisors from 2 to n-1
        if n % i == 0:
            factors.append(i)  # Add divisors to the list
    return factors  # Return list of factors

# Main program logic
def main():
    while True:
        user_input = input("Please enter the number to check: ")

        if user_input.isdigit():  # Selection: validate that input is a positive whole number
            num = int(user_input)

            # Find the previous prime number
            prev_prime = previous_prime(num)
            if prev_prime:
                print(f"The prime number before {num} is {prev_prime}.")
            else:
                print(f"There is no prime number before {num}.")

            # Check if the number is prime
            if is_prime(num):
                print(f"{num} is a prime number.")
            else:
                factors = find_factors(num)
                print(f"{num} is not prime. Its factors are {', '.join(map(str, factors))}.")

            # Find the next prime number
            print(f"The prime number after {num} is {next_prime(num)}.")

            input("\nPress Enter to exit the program...")  # Wait for user to press Enter to exit
            break  # Exit loop after processing the input
        else:
            print("That is not a positive whole number. Try again.\n")  # Selection: re-prompt for valid input

if __name__ == "__main__":
    main()  # Start the program

